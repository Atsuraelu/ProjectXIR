class MatCol0:	def __init__(self,tree):		test_group = bpy.data.node_groups.new('MatCol0', 'ShaderNodeTree')		inner_node_0 = test_group.nodes.new('NodeGroupInput')		inner_node_1 = test_group.nodes.new('NodeGroupOutput')		inner_node_2 = test_group.nodes.new('ShaderNodeBrightContrast')		inner_node_3 = test_group.nodes.new('ShaderNodeCombineRGB')		inner_node_4 = test_group.nodes.new('ShaderNodeMixRGB')		test_group.inputs.new('NodeSocketColor', 'Image Alpha')		test_group.inputs.new('NodeSocketFloat', 'R')		test_group.inputs.new('NodeSocketFloat', 'G')		test_group.inputs.new('NodeSocketFloat', 'B')		test_group.inputs.new('NodeSocketFloat', 'A')		test_group.inputs.new('NodeSocketColor', 'MatCol0')		test_group.inputs.new('NodeSocketColor', 'Lines')		inner_node_0.location = (-200.0, 0.0)		inner_node_1.location = (400.0, 0.0)		inner_node_2.location = (20.0, -140.0)		inner_node_3.location = (0.0, 80.0)		inner_node_4.location = (200.0, 60.0)		test_group.links.new(inner_node_3.inputs['R'], inner_node_0.outputs['R'])		test_group.links.new(inner_node_3.inputs['G'], inner_node_0.outputs['G'])		test_group.links.new(inner_node_3.inputs['B'], inner_node_0.outputs['B'])		test_group.links.new(inner_node_2.inputs['Color'], inner_node_0.outputs['Image Alpha'])		test_group.links.new(inner_node_4.inputs['Fac'], inner_node_0.outputs['A'])		test_group.links.new(inner_node_4.inputs['Color1'], inner_node_2.outputs['Color'])		test_group.links.new(inner_node_4.inputs['Color2'], inner_node_3.outputs['Image'])		test_group.links.new(inner_node_1.inputs['MatCol0'], inner_node_4.outputs['Color'])		test_group.links.new(inner_node_1.inputs['Lines'], inner_node_2.outputs['Color'])		inner_node_2.inputs['Color'].default_value = (1.0, 1.0, 1.0, 1.0)		inner_node_2.inputs['Bright'].default_value = 0.0		inner_node_2.inputs['Contrast'].default_value = 100.0		inner_node_2.outputs['Color'].default_value = (0.0, 0.0, 0.0, 0.0)		inner_node_3.inputs['R'].default_value = 0.0		inner_node_3.inputs['G'].default_value = 0.0		inner_node_3.inputs['B'].default_value = 0.0		inner_node_3.outputs['Image'].default_value = (0.0, 0.0, 0.0, 0.0)		inner_node_4.inputs['Fac'].default_value = 0.5		inner_node_4.inputs['Color1'].default_value = (0.5, 0.5, 0.5, 1.0)		inner_node_4.inputs['Color2'].default_value = (0.5, 0.5, 0.5, 1.0)		inner_node_4.outputs['Color'].default_value = (0.0, 0.0, 0.0, 0.0)		inner_node_4.blend_type = 'ADD'		inner_node_4.use_clamp = True		node = tree.nodes.new('ShaderNodeGroup')		node.label = 'MatCol0'		node.node_tree = bpy.data.node_groups[test_group.name]		node.width = 180.0		self.__node = node		pass	def node(self):		return self.__node	pass